== todos ==

libvpx
  fix, update blog/ML
    threading/configure?
mjpeg?
  input at least :P

more check march=native
  vpx? ffmpeg more? do I need to enable runtime detection when it's not? libx264 still uses i686?

test timings for first failure commits git-bisect-zy[?] (linuxes too)
ffplay console

== maybe/never do ==

does it affect "both" libx264 and/or just ffmpeg?
    Also, I wonder if x264 needs to be recompiled after every update to
    test? Does this issue root in FFmpeg or x264 possibly?

libjpeg turbo

--disable-decoder=libvpx

allow it to work for linux "using native gcc", too :P

more libraries
  All the current builds'?

not require prompts at all for the compiler
try and figure out if its pthreads that's giving me the speedup over his

test if march is actually being applied [?]
  test its effect
  everywhere

profile guided builds?
  major libs
  everything

"if you're not going to share your binaries with other computers, you only need -march" http://en.gentoo-wiki.com/wiki/CFLAGS#-mtune.3D.2F-mcpu.3D.3Cyour_arch.3E

other "-march" like options? fastmath
is there a way to specify to swscale "trust me, I'll just always have these options available" or the like? Or within ffmpeg?
does mplayer builds use any others? what did his options do? Do I need anything like that?

make -j 2 (more than one core)

TODO: mention it to:
http://www.bizzeh.com/687/build-libvpx-windows-ffmpeg-win32
  after vpx zeranoe...
  and to their ML...
